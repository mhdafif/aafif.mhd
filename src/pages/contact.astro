---
import { Icon } from "astro-icon/components";
import Layout from "@/components/Layout/Layout.astro";
const contacts = [
  {
    name: "Phone",
    icon: "ic:baseline-local-phone",
    value: "+62 813-2197-2065",
    href: "https://wa.me/6281321972065",
  },
  {
    name: "Email",
    icon: "ic:baseline-email",
    value: "aafif.mdh@gmail.com",
    href: "mailto:aafif.mhd@gmail.com",
  },
  {
    name: "Address",
    icon: "ic:baseline-location-on",
    value: "Indonesia, Central Java",
  },
  {
    name: "Follow Me",
    icon: "ic:baseline-share",
    items: [
      {
        href: "https://www.instagram.com/nonieck_/",
        label: "Instagram",
        icon: "cib:instagram",
      },
      {
        href: "https://www.linkedin.com/in/mhdafif/",
        label: "LinkedIn",
        icon: "cib:linkedin",
      },
      {
        href: "https://github.com/mhdafif",
        label: "GitHub",
        icon: "cib:github",
      },
    ],
  },
];
---

<Layout title="Contact">
  <div class="w-full laptop:w-2/3 mx-auto space-y-14 laptop:space-y-10">
    <div class="w-fit mx-auto">
      <h1 class="typewriter-once text-center text-3xl font-bold">
        Get in touch
      </h1>
    </div>

    <div
      class="contacts grid laptop:grid-cols-2 gap-10 laptop:gap-y-0 laptop:gap-x-20 relative"
    >
      {
        contacts.map((contact, index) => {
          const isEven = index % 2 === 0;
          return [
            <div
              aria-hidden={isEven}
              class="aria-hidden:hidden hidden laptop:block"
            />,

            <div
              tabindex={index}
              data-id={index % 2 === 0}
              class="contacts-item card group relative text-center !pt-12 !pb-12"
            >
              <div class="absolute left-1/2 -translate-x-1/2 text-4xl rounded-full bg-charcoal p-3 border-5 border-solid border-blacki top-[-35px]">
                <Icon
                  name={contact.icon}
                  class="group-hover:text-star group-focus:text-star transition-colors duration-300"
                />
              </div>
              <h2 class="text-xl font-bold mb-4">{contact.name}</h2>
              <a
                href={contact.href}
                target="_blank"
                aria-hidden={!contact.href}
                class=" text-off-white/70 group-hover:text-star group-focus:text-star transition-colors duration-300"
              >
                {contact.value}
              </a>
              {contact.items && (
                <ul class="flex items-center justify-center gap-5">
                  {contact.items.map((item) => (
                    <li>
                      <a
                        href={item.href}
                        target="_blank"
                        class="text-off-white/70 hover:text-star transition-colors duration-300"
                      >
                        <Icon name={item.icon} class="w-6 h-6" />
                      </a>
                    </li>
                  ))}
                </ul>
              )}
            </div>,

            <div
              aria-hidden={!isEven}
              class="aria-hidden:hidden hidden laptop:block"
            />,
          ];
        })
      }
    </div>
  </div>
</Layout>

<style lang="scss">
  .contacts {
    &::before {
      @media (width < 1024px) {
        display: none;
      }
      content: "";
      position: absolute;
      top: 0;
      left: 50%;
      transform: translateX(-50%);
      width: 4px;
      height: 100%;
      background-color: rgba(250, 249, 246, 0.5);
      // border-radius: 100px;
      border-radius: calc(infinity * 1px);
    }

    &-item {
      &:nth-of-type(2),
      &:nth-of-type(8) {
        &::after {
          @media (width < 1024px) {
            display: none;
          }
          content: "";
          position: absolute;
          top: 50%;
          transform: translateY(-50%);
          right: calc((2.5rem - 2px) * -1);
          width: calc(2.5rem - 2px);
          height: 4px;
          border: 2px dashed rgba(250, 249, 246, 0.5);
        }
      }
      &:nth-of-type(2) {
        &::before {
          @media (width < 1024px) {
            display: none;
          }
          content: "";
          position: absolute;
          top: 39px;
          transform: translateY(-50%);
          right: calc(-2.5rem - 2px);
          width: 4px;
          height: 50%;
          background-color: var(--color-blacki);
        }
      }

      // &[data-id="false"] {

      &:nth-of-type(5),
      &:nth-of-type(11) {
        &::before {
          @media (width < 1024px) {
            display: none;
          }
          content: "";
          position: absolute;
          top: 50%;
          transform: translateY(-50%);
          left: calc((2.5rem - 2px) * -1);
          width: calc(2.5rem - 2px);
          height: 4px;
          border: 2px dashed rgba(250, 249, 246, 0.5);
        }
      }
      &:nth-of-type(11) {
        &::after {
          @media (width < 1024px) {
            display: none;
          }
          content: "";
          position: absolute;
          bottom: -43px;
          transform: translateY(-50%);
          left: calc(-2.5rem - 2px);
          width: 4px;
          height: 50%;
          background-color: var(--color-blacki);
        }
      }
    }
  }

  .typewriter-once {
    animation:
      typing-once 1.5s steps(15, end),
      blink-caret 0.5s step-end infinite;
  }
</style>
