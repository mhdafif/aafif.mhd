---
import Modal from "@/components/Modal.astro";
import Title from "@/components/Title.astro";
import Tooltip from "@/components/Tooltip.astro";
import { Icon } from "astro-icon/components";
import ExperienceModalContent from "./ModalContent/ExperienceModalContent.astro";

const experiences = [
  {
    company: "Ultravoucher",
    position: "Frontend Engineer",
    start: "Jan 2022",
    end: "May 2025",
    details: [
      "Lead and direct the frontend team to ensure consistent implementation of best practices",
      "Implement UI/UX designs from Figma into production-ready applications",
      "Build and maintain responsive applications optimized for desktop, webview, and webapp environments",
      "Ensure compatibility across all devices, including older mobile devices",
      "Refactor and revamp legacy applications using modern frontend technologies",
      "Design and develop complex UI/UX for internal dashboards",
      "Design and build a custom internal UI framework tailored for company-wide use",
      "Create a standardized boilerplate to streamline setup for new frontend projects",
      "Establish and implement frontend SOPs for the team",
      "Propose and implement new ideas to improve development workflow and scalability",
      "Conduct code cleaning and implement a ticket-based review system",
      "Enhance SEO and performance for various key products",
      "Collaborate with cross-functional teams to ensure high-quality, consistent frontend delivery",
    ],
    stacks: ["React", "Vue", "Remix", "Next.js"],
  },
  {
    company: "Prospace",
    position: "Frontend Engineer",
    start: "Oct 2020",
    end: "Dec 2021",
    details: [
      "Maintain and develop B2B products tailored to client needs",
      "Implement UI features and enhancements based on client requirements",
      "Design and maintain unit testing strategy for application stability",
      "Ensure the smooth release and deployment of applications",
      "Collaborate with backend and QA teams to fix bugs and refine functionality",
      "Create an internal UI framework to standardize frontend development",
      "Contribute to performance optimization and UI consistency across products",
    ],
    stacks: [
      "React",
      "Next.js",
      "Javascript",
      "TypeScript",
      "HTML5 + CSS3",
      "Jest",
      "Testing Library",
      "Git",
      "Docker",
      "Storybook",
    ],
  },
  {
    company: "Xsis Mitra Utama",
    position: "Frontend Engineer",
    start: "Sep 2018",
    end: "Sep 2020",
    details: [
      "Revamped Employee Self Service application from Web Forms to microservice architecture using React and TypeScript",
      "Collaborated with backend teams to transition legacy systems into modern frontend architecture",
    ],
    stacks: ["React", "Javascript", "TypeScript", "HTML5 + CSS3", "Git"],
  },
];
---

<div
  class="card-blacki border-off-white/10 relative h-full rounded-lg border border-solid p-4"
>
  <div
    class="shortcut-key hidden laptop:flex items-center justify-center text-blacki outline-charcoal group absolute top-0 right-0 z-[1] aspect-square w-7 rounded-tr-lg rounded-bl-lg outline-4 outline-solid"
  >
    <div
      class="bg-star relative h-full w-full cursor-default rounded-tr-lg rounded-bl-lg text-center text-lg font-semibold transition-all duration-500 ease-out group-hover:opacity-70"
    >
      3
    </div>
    <Tooltip content="Shortcut : 3" />
  </div>

  <div class="flex h-full flex-col">
    <div>
      <Title size="small" text="Experience" />
    </div>

    <div class="mt-8 flex flex-auto flex-col space-y-3">
      {
        experiences.slice(0, 1).map((item) => (
          <div class="exp-item bg-charcoal rounded-5 group relative flex-auto p-0.5">
            <div class="rounded-5 bg-charcoal relative z-[1] flex h-full w-full flex-col justify-between px-3 py-2">
              <h3 class="text-star text-lg font-bold">@ {item.company}</h3>
              <h4 class="text-off-white font-semibold">{item.position}</h4>
              <h6 class="text-off-white/50 font-medium">
                {item.start} - {item.end}
              </h6>
              <div class="hide-scroll snap-x-items-list my-1 flex items-center gap-2 overflow-hidden">
                {item.stacks.slice(0, 4).map((stack) => (
                  <span class="bg-blacki text-off-white hover:bg-star hover:text-blacki cursor-default snap-start rounded-5 px-1.5 py-0.5 text-xs text-nowrap transition-colors duration-300 ease-out">
                    {stack}
                  </span>
                ))}
              </div>
            </div>
          </div>
        ))
      }
      <div
        id="more-exp"
        class="bg-star rounded-5 border-charcoal hover:bg-star/80 relative flex w-full cursor-pointer items-center justify-center border border-solid py-1 transition-all duration-300 ease-out hover:animate-pulse"
      >
        <Icon name="ic:baseline-open-in-new" class="text-blacki text-4xl" />
      </div>
    </div>
  </div>
</div>

<!-- Modal Experience -->
<Modal title="Experience" modalId="modal-exp">
  <div class="mt-6">
    <ExperienceModalContent />
  </div>
</Modal>

<script>
  const modalExp = document.getElementById("modal-exp");
  const moreExp = document.getElementById("more-exp");
  const closeBtn = document.getElementById("modal-exp-close");
  const modalContainer = modalExp.querySelector(".modal-container");
  const scrollToTop = document.getElementById("scrollToTop");

  function handleOpenModal(isOpen: boolean) {
    const anyModalOpen = document.querySelector(".modal.modal-open");

    if (isOpen && anyModalOpen && anyModalOpen !== modalExp) {
      return;
    }

    if (isOpen) {
      modalExp.classList.add("modal-open");
      scrollToTop.classList.add("hidden");
      document.body.style.overflow = "hidden";
    } else {
      modalContainer.scrollTo({ top: 0, behavior: "smooth" });
      modalExp.classList.remove("modal-open");
      scrollToTop.classList.remove("hidden");
      if (!document.querySelector(".modal.modal-open")) {
        document.body.style.overflow = "";
      }
    }
  }

  addEventListener("keydown", (event) => {
    if (event.key === "3") {
      handleOpenModal(true);
    }
    if (event.key === "Escape") {
      handleOpenModal(false);
    }
  });
  moreExp.addEventListener("click", () => {
    handleOpenModal(true);
  });
  closeBtn.addEventListener("click", () => {
    handleOpenModal(false);
  });
  modalExp.addEventListener("click", (event: any) => {
    if (modalExp.classList.contains("modal-open")) {
      if (!modalContainer.contains(event.target)) {
        handleOpenModal(false);
      }
    }
  });
</script>

<style lang="scss">
  .exp-item::before {
    content: "";
    position: absolute;
    height: 10px;
    width: 10px;
    border-radius: 50%;
    top: 50%;
    transform: translateY(-50%);
    left: -4px;
    background: var(--color-charcoal);
    border: 1.5px solid rgba(250, 249, 246, 0.5);
    transition: all 0.3s ease-out;
    z-index: 2;
  }

  .exp-item:hover {
    &::before {
      border-color: var(--color-star);
      // background-color: var(--color-blacki);
    }
    &::after {
      background-color: var(--color-star);
    }
  }

  .exp-item::after {
    content: "";
    position: absolute;
    height: 50%;
    width: 50%;
    top: 50%;
    left: 0;
    background-color: rgba(250, 249, 246, 0.5);
    transition: all 0.3s ease-out;
    border-bottom-left-radius: 5px;
  }
</style>
